//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//  Template generated by Sally's Zone
//

import UIKit
import RxSwift
import RxCocoa

class VFUK___VARIABLE_productName:identifier___ViewController: VFUKBaseViewController, VFUK___VARIABLE_productName:identifier___ViewControllerProtocol {
    // MARK: - Constants
    struct Constants {
    }

    // MARK: - Outlets
	@IBOutlet weak var titleView: VFUKScreenTitleView!

	override var screenTrackingName: String {
		return VFUKTrackingConstants.___VARIABLE_productName:identifier___.screenName
	}

    // MARK: - Constructors
	private var viewModel: VFUK___VARIABLE_productName:identifier___ViewModelProtocol!
	func initialize(viewModel: VFUK___VARIABLE_productName:identifier___ViewModelProtocol) {
		self.viewModel = viewModel
		super.initialize(viewModel: viewModel)
	}

    // MARK: - View Setup
    override func viewDidLoad() {
        super.viewDidLoad()
		self.setupContent()
        self.setupScrollView()
        self.configureBinding()
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        VFUK___VARIABLE_productName:identifier___TrackingHelper().track___VARIABLE_productName:identifier___Screen()
    }

	// MARK: - private Methods
	/// Setups the content of the screen
    private func setupContent() {
		self.titleView.text = VFUKContentStringsHelper.getString(for: <#Screen_Title#>)
    }

    /// setup scroll view
    private func setupScrollView() {
        self.mainScrollView?.isHidden = true
    }

    /// Configures the binding to the viewModel
    private func configureBinding() {
    }

}
